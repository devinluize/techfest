npm install @react-navigation/
npm install react-native-screens react-native-safe-area-context
npm install @react-navigation/native-stack
npm i react-native-vector-icons
npm i @react-native-async-storage/async-storage
npm install @react-navigation/bottom-tabs
productPrice
mentorPrice
// import React from "react";
// import { NavigationContainer } from "@react-navigation/native";
// import { createNativeStackNavigator } from "@react-navigation/native-stack";
// import {
//   ScrollView,
//   StatusBar,
//   StyleSheet,
//   Text,
//   TouchableOpacity,
//   View,
// } from "react-native";
// import Entypo from "react-native-vector-icons/Entypo";
// import MaterialCommunityIcons from "react-native-vector-icons/MaterialCommunityIcons";
// import { COLOUR } from "../database/Database";
// import { Colors } from "react-native/Libraries/NewAppScreen";
// const Home = () => {
//   const Stack = createNativeStackNavigator();

//   return (
//     <View style={styles.main}>
//       <Text>dasdasdas</Text>
//       {/* <Text>Home</Text> */}
//       <StatusBar backgroundColor={COLOUR.white} barStyle="dark-content" />
//       <ScrollView showsVerticalScrollIndicator={false}>
//         <View style={styles.scrollstyle}>
//           <TouchableOpacity>
//             <Entypo
//               name="shopping-bag"
//               style={{
//                 fontSize: 18,
//                 color: COLOUR.backgroundMedium,
//                 padding: 12,
//                 borderRadius: 10,
//                 backgroundColor: COLOUR.backgroundLight,
//               }}
//             />
//           </TouchableOpacity>
//           <TouchableOpacity>
//             <MaterialCommunityIcons
//               name="cart"
//               style={{
//                 fontSize: 18,
//                 color: COLOUR.backgroundMedium,
//                 padding: 12,
//                 borderRadius: 10,
//                 borderWidth: 1,
//                 backgroundColor: COLOUR.backgroundLight,
//                 borderColor: COLOUR.backgroundLight,
//               }}
//             />
//           </TouchableOpacity>
//         </View>
//         <View style={styles.textview}>
//           <Text style={styles.titletext}>Mentor</Text>
//           <Text style={styles.titletext2}>Book your private mentor now!!!</Text>
//         </View>
//       </ScrollView>
//     </View>
//   );
// };
// const styles = StyleSheet.create({
//   main: {
//     width: "100%",
//     height: "100%",
//     backgroundColor: COLOUR.white,
//   },
//   scrollstyle: {
//     width: "100%",
//     flexDirection: "row",
//     justifyContent: "space-between",
//     padding: 16,
//   },
//   textview: {
//     marginBottom: 10,
//     padding: 16,
//   },
//   titletext: {
//     fontSize: 26,
//     color: COLOUR.black,
//     fontWeight: "400",
//     letterSpacing: 1,
//     marginBottom: 10,
//   },
//   titletext2: {
//     fontSize: 17,
//     color: COLOUR.black,
//     fontWeight: "400",
//     letterSpacing: 1,
//     marginBottom: 10,
//     lineHeight: 24,
//   },
// });

// export default Home;
import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StatusBar,
  ScrollView,
  TouchableOpacity,
  Image,
} from "react-native";
import { COLOURS, Items } from "../database/Database";
import Entypo from "react-native-vector-icons/Entypo";
import MaterialCommunityIcons from "react-native-vector-icons/MaterialCommunityIcons";
import FontAwesome from "react-native-vector-icons/FontAwesome";

const Home = ({ navigation }) => {
  const [products, setProducts] = useState([]);
  const [accessory, setAccessory] = useState([]);

  //get called on screen loads
  useEffect(() => {
    const unsubscribe = navigation.addListener("focus", () => {
      getDataFromDB();
    });

    return unsubscribe;
  }, [navigation]);

  //get data from DB

  const getDataFromDB = () => {
    let productList = [];
    let accessoryList = [];
    for (let index = 0; index < Items.length; index++) {
      if (Items[index].category == "product") {
        productList.push(Items[index]);
      } else if (Items[index].category == "accessory") {
        accessoryList.push(Items[index]);
      }
    }

    setProducts(productList);
    setAccessory(accessoryList);
  };

  //create an product reusable card

  const ProductCard = ({ data }) => {
    return (
      <TouchableOpacity
        onPress={() =>
          navigation.navigate("ProductInfo", { productID: data.id })
        }
        style={{
          width: "48%",
          marginVertical: 14,
        }}
      >
        <View
          style={{
            width: "100%",
            height: 100,
            borderRadius: 10,
            backgroundColor: COLOURS.backgroundLight,
            position: "relative",
            justifyContent: "center",
            alignItems: "center",
            marginBottom: 8,
          }}
        >
          {/* {data.isOff ? (
            <View
              style={{
                position: "absolute",
                width: "20%",
                height: "24%",
                backgroundColor: COLOURS.green,
                top: 0,
                left: 0,
                borderTopLeftRadius: 10,
                borderBottomRightRadius: 10,
                alignItems: "center",
                justifyContent: "center",
              }}
            >
              <Text
                style={{
                  fontSize: 12,
                  color: COLOURS.white,
                  fontWeight: "bold",
                  letterSpacing: 1,
                }}
              >
                {data.offPercentage}%
              </Text>
            </View>
          ) : null} */}
          <Image
            source={data.productImage}
            style={{
              width: "80%",
              height: "80%",
              resizeMode: "contain",
            }}
          />
        </View>
        <Text
          style={{
            fontSize: 12,
            color: COLOURS.black,
            fontWeight: "600",
            marginBottom: 2,
          }}
        >
          {data.productName}
        </Text>
        {data.category == "accessory" ? (
          data.isAvailable ? (
            <View
              style={{
                flexDirection: "row",
                alignItems: "center",
              }}
            >
              <FontAwesome
                name="circle"
                style={{
                  fontSize: 12,
                  marginRight: 6,
                  color: COLOURS.green,
                }}
              />
              <Text
                style={{
                  fontSize: 12,
                  color: COLOURS.green,
                }}
              >
                Available
              </Text>
            </View>
          ) : (
            <View
              style={{
                flexDirection: "row",
                alignItems: "center",
              }}
            >
              {/* <FontAwesome
                name="circle"
                style={{
                  fontSize: 12,
                  marginRight: 6,
                  color: COLOURS.red,
                }}
              /> */}
              {/* <Text
                style={{
                  fontSize: 12,
                  color: COLOURS.red,
                }}
              >
                Unavailable
              </Text> */}
            </View>
          )
        ) : null}
        <Text>Rp. {data.productPrice}</Text>
      </TouchableOpacity>
    );
  };

  return (
    <View
      style={{
        width: "100%",
        height: "100%",
        backgroundColor: COLOURS.white,
      }}
    >
      <StatusBar backgroundColor={COLOURS.white} barStyle="dark-content" />
      <ScrollView showsVerticalScrollIndicator={false}>
        <View
          style={{
            width: "100%",
            flexDirection: "row",
            justifyContent: "space-between",
            padding: 16,
          }}
        >
          {/* <TouchableOpacity>
            <Entypo
              name="shopping-bag"
              style={{
                fontSize: 18,
                color: COLOURS.backgroundMedium,
                padding: 12,
                borderRadius: 10,
                backgroundColor: COLOURS.backgroundLight,
              }}
            />
          </TouchableOpacity>
          <TouchableOpacity onPress={() => navigation.navigate("MyCart")}>
            <MaterialCommunityIcons
              name="cart"
              style={{
                fontSize: 18,
                color: COLOURS.backgroundMedium,
                padding: 12,
                borderRadius: 10,
                borderWidth: 1,
                borderColor: COLOURS.backgroundLight,
              }}
            />
          </TouchableOpacity> */}
        </View>
        <View
          style={{
            marginBottom: 10,
            padding: 16,
          }}
        >
          <Text
            style={{
              fontSize: 26,
              color: COLOURS.black,
              fontWeight: "500",
              letterSpacing: 1,
              marginBottom: 10,
            }}
          >
            Mentor application
          </Text>
          <Text
            style={{
              fontSize: 14,
              color: COLOURS.black,
              fontWeight: "400",
              letterSpacing: 1,
              lineHeight: 24,
            }}
          >
            Book your private mentor now
            {"\n"}Knowledge is the future!!
          </Text>
        </View>
        <View
          style={{
            padding: 16,
          }}
        >
          <View
            style={{
              flexDirection: "row",
              alignItems: "center",
              justifyContent: "space-between",
            }}
          >
            <View
              style={{
                flexDirection: "row",
                alignItems: "center",
              }}
            >
              <Text
                style={{
                  fontSize: 18,
                  color: COLOURS.black,
                  fontWeight: "500",
                  letterSpacing: 1,
                }}
              >
                Products
              </Text>
              <Text
                style={{
                  fontSize: 14,
                  color: COLOURS.black,
                  fontWeight: "400",
                  opacity: 0.5,
                  marginLeft: 10,
                }}
              >
                {Items.length}
              </Text>
            </View>
            {/* <Text
              style={{
                fontSize: 14,
                color: COLOURS.blue,
                fontWeight: "400",
              }}
            >
              SeeAll
            </Text> */}
          </View>
          <View
            style={{
              flexDirection: "row",
              flexWrap: "wrap",
              justifyContent: "space-around",
            }}
          >
            {products.map((data) => {
              return <ProductCard data={data} key={data.id} />;
            })}
          </View>
        </View>

        <View
          style={{
            padding: 16,
          }}
        >
          <View
            style={{
              flexDirection: "row",
              alignItems: "center",
              justifyContent: "space-between",
            }}
          >
            <View
              style={{
                flexDirection: "row",
                alignItems: "center",
              }}
            >
              {/* <Text
                style={{
                  fontSize: 18,
                  color: COLOURS.black,
                  fontWeight: "500",
                  letterSpacing: 1,
                }}
              >
                Accessories
              </Text> */}
              {/* <Text
                style={{
                  fontSize: 14,
                  color: COLOURS.black,
                  fontWeight: "400",
                  opacity: 0.5,
                  marginLeft: 10,
                }}
              >
                78
              </Text> */}
            </View>
            {/* <Text
              style={{
                fontSize: 14,
                color: COLOURS.blue,
                fontWeight: "400",
              }}
            >
              SeeAll
            </Text> */}
          </View>
          <View
            style={{
              flexDirection: "row",
              flexWrap: "wrap",
              justifyContent: "space-around",
            }}
          >
            {/* {accessory.map((data) => {
              return <ProductCard data={data} key={data.id} />;
            })} */}
          </View>
        </View>
      </ScrollView>
    </View>
  );
};

export default Home;


import React from "react";
import { View, Text } from "react-native";
import { NavigationContainer } from "@react-navigation/native";
import { createNativeStackNavigator } from "@react-navigation/native-stack";
// import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
import Ionicons from "react-native-vector-icons/Ionicons";
import Home from "./components/screens/Home";
import MyCart from "./components/screens/MyCart";
import ProductInfo from "./components/screens/ProductInfo";
import Mentorinfo from "./components/screens/Mentorinfo";
import Todolist from "./components/to-do-list/todolist";
import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
const App = () => {
  const Stack = createNativeStackNavigator();
  const Tab = createBottomTabNavigator();
  return (
    // <NavigationContainer>
    //   <Stack.Navigator
    //     screenOptions={{
    //       headerShown: false,
    //     }}
    //   >
    //     <Stack.Screen name="Home" component={Home} />
    //     <Stack.Screen name="MyCart" component={MyCart} />
    //     <Stack.Screen name="Mentorinfo" component={Mentorinfo} />
    //   </Stack.Navigator>
    // </NavigationContainer>
    <NavigationContainer>
      <Tab.Navigator
        initialRouteName={Home}
        screenOptions={({ route }) => ({
          tabBarActiveTintColor: "tomato",
          tabBarInactiveTintColor: "grey",
          tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },
          tabBarStyle: { padding: 10, height: 70 },
          headerShown: false,
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;
            let rn = route.name;

            if (rn === Home) {
              iconName = focused ? "home" : "home-outline";
            } else if (rn === Todolist) {
              iconName = focused ? "list" : "list-outline";
            } else if (rn === Mentorinfo) {
              iconName = focused ? "settings" : "settings-outline";
            }

            // You can return any component that you like here!
            return <Ionicons name={iconName} size={size} color={color} />;
          },
        })}
        // tabBarOptions={{
        //   headerShown: false,
        //   tabBarActiveTintColor: "tomato",
        //   tabBarInactiveTintColor: "grey",
        //   tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },
        //   tabBarStyle: { padding: 10, height: 70 },
        // }}
      >
        <Tab.Screen name={"Home"} component={Home} />
        <Tab.Screen name={"Todolist"} component={Todolist} />
        <Stack.Screen name={"Mentorinfo"} component={Mentorinfo} />
      </Tab.Navigator>
      {/* <Stack.Navigator
        screenOptions={{
          headerShown: false,
        }}
      >
        <Stack.Screen name="Mentorinfo" component={Mentorinfo} />
      </Stack.Navigator> */}
    </NavigationContainer>
  );
};

export default App;

note to do 
ubah to dolist jadi pake stack navigator abis itu pake TouchableOpacity